{"version":3,"sources":["features/authentication/authConstants.js","api/index.js","features/authentication/authActions.js","features/authentication/AccountPage.jsx","features/home/HomePage.jsx","features/events/eventConstants.js","features/events/eventActions.js","features/events/eventDashboard/EventListItem.jsx","features/events/eventDashboard/EventList.jsx","features/events/eventDashboard/EventFilters.jsx","features/events/eventDashboard/EventDashboard.jsx","features/events/eventDetails/EventDetailedChatForm.jsx","features/events/eventDetails/EventDetailedChat.jsx","features/events/eventDetails/EventDetailedHeader.jsx","features/events/eventDetails/EventDetailedInfo.jsx","features/events/eventDetails/EventDetailedSidebar.jsx","features/events/eventDetails/EventDetailedPage.jsx","features/events/EventForm/EventForm.jsx","features/nav/SignedInMenu.jsx","app/common/modals/modalReducer.js","features/nav/SignedOutMenu.jsx","features/nav/NavBar.jsx","app/common/modals/ModalWrapper.jsx","features/authentication/LoginForm.jsx","features/authentication/RegisterForm.jsx","app/common/modals/ModalManager.jsx","features/profile/profleConstants.js","features/profile/profileActions.js","features/profile/ProfilePage.jsx","app/common/photos/PhotoWidgetCropper.jsx","app/common/photos/PhotoWidgetDropzone.jsx","app/common/photos/PhotoUploadWidget.jsx","features/profile/PhotoTab.jsx","app/layout/App.jsx","reportWebVitals.js","features/authentication/authReducer.js","features/events/eventReducer.js","features/profile/profileReducer.js","app/async/asyncReducer.js","app/Store/rootReducer.js","index.js","app/Store/configureStore.js"],"names":["SIGN_IN_USER","SIGN_OUT_USER","SIGN_UP_USER","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPosts","get","updatePost","id","updatedPost","patch","addAttendee","cancelAttendee","addComment","toggleEvent","updatePhoto","signIn","formData","post","signUp","addPhoto","updatePassword","updatePass","signup","dispatch","a","api","data","type","payload","console","log","signin","pass","AccountPage","useDispatch","history","useHistory","Segment","Header","dividing","size","content","color","sub","initialValues","newPassword1","newPassword2","validationSchema","Yup","required","oneOf","onSubmit","values","setSubmitting","setErrors","user","result","_id","push","error","auth","message","errors","isSubmitting","isValid","dirty","className","name","placeholder","Divider","hidden","Label","basic","style","marginBottom","Button","display","disabled","loading","positive","HomePage","inverted","textAlign","vertical","Container","Image","src","marginLeft","as","onClick","Icon","CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","FETCH_EVENTS","loadEvents","sort","b","Date","date","newDates","filter","e","newData1","attendees","includes","displayName","newData2","hostedBy","createPost","newPost","photoURL","EventListItem","event","Loader","c","count","hostUid","toast","setItem","Group","Item","circular","hostPhotoURL","Content","title","Description","isCancelled","top","ribbon","clearing","venue","secondary","List","horizontal","description","Link","to","floated","EventList","events","map","EventFilters","filterEvent","setfilterEvent","Menu","width","icon","attached","active","onChange","value","tileDisable","EventDashboard","useSelector","state","async","useState","Map","Grid","GridColumn","key","set","EventDetailedChatForm","eventId","chat","comment","resetForm","FormField","primary","EventDetailedChat","border","Comment","comments","Avatar","Author","Metadata","Text","Actions","Action","eventImageStyle","eventImageTextStyle","position","bottom","left","height","EventDetailedHeader","isHost","isGoing","load","setLoad","aj","Array","from","bj","padding","category","fluid","EventDetailedInfo","Column","verticalAlign","EventDetailedSidebar","length","relaxed","divided","attendee","EventDetailedPage","match","find","params","some","EventForm","confirmOpen","setConfirmOpen","selectedEvent","eSelect","forEach","p","handle","city","time","document","location","reload","option","Confirm","open","onCancel","onConfirm","handleCancelEvent","SignedInMenu","profile","currentUserProfile","setUser","photo","avatar","spaced","Dropdown","pointing","text","googleId","OPEN_MODAL","CLOSE_MODAL","openModal","closeModal","SignedOutMenu","setAuthenticate","modalType","NavBar","setFormOpen","authenticated","fixed","NavLink","exact","header","alt","marginRight","ModalWrapper","children","Modal","onClose","LoginForm","googleSuccess","res","profileObj","tokenId","googleError","alert","email","password","msg","marginTop","clientId","render","renderProps","onSuccess","onFailure","cookiePolicy","RegisterForm","matches","ModalManager","renderedModal","modalLookup","currentModal","modals","modalProps","ModalComponent","LISTEN_TO_CURRENT_USER_PROFILE","UPDATE_PHOTO","ProfilePage","Statistic","label","Reveal","animated","visible","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","ref","aspectRatio","preview","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","current","getCroppedCanvas","toBlob","blob","PhotoWidgetDropzone","setFiles","dropzoneStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","file","Object","assign","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","userID","files","image","setLoading","base64data","setBase","reader","FileReader","readAsDataURL","onloadend","handleCancelCrop","minHeight","minWidth","overflow","PhotosTab","Tab","Pane","App","useLocation","useEffect","hideProgressBar","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","currentUser","ASYNC_ACTION_START","ASYNC_ACTION_FINISH","ASYNC_ACTION_ERROR","rootReducer","combineReducers","evt","uid","providerId","providerData","clear","stringify","store","createStore","composeWithDevTools","applyMiddleware","thunk","rootEL","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.83d7f390.chunk.js","sourcesContent":["export const SIGN_IN_USER = 'SIGN_IN_USER';\r\nexport const SIGN_OUT_USER = 'SIGN_OUT_USER';\r\nexport const SIGN_UP_USER = 'SIGN_UP_USER';","import axios from 'axios';\r\n\r\n//const API = axios.create({ baseURL: 'http://localhost:5001' });\r\n\r\nconst API = axios.create({ baseURL: 'https://xperince-project.herokuapp.com/' });\r\n\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if (localStorage.getItem('profile')) {\r\n      req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    }\r\n  \r\n    return req;\r\n});\r\n\r\nexport const fetchPosts = () => API.get('/posts');\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\nexport const addAttendee = (id, updatedPost) => API.patch(`/posts/${id}/addAttendee`, updatedPost);\r\nexport const cancelAttendee = (id, updatedPost) => API.patch(`/posts/${id}/cancelAttendee`, updatedPost);\r\nexport const addComment = (id, updatedPost) => API.patch(`/posts/${id}/addComment`, updatedPost);\r\nexport const toggleEvent = (id, updatedPost) => API.patch(`/posts/${id}/toggleEvent`, updatedPost);\r\nexport const updatePhoto = (id, updatePhoto) => API.patch(`/posts/${id}/updatePhoto`, updatePhoto);\r\nexport const updateCount = (id, updateCount) => API.patch(`/posts/${id}/updateCount`, updateCount);\r\n\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\nexport const signUp = (formData) => API.post('/user/signup', formData);\r\nexport const addPhoto = (id, updatePhoto) => API.patch(`/user/${id}/addPhoto`, updatePhoto);\r\nexport const updatePassword = (id, updatePass) => API.patch(`/user/${id}/updatePassword`, updatePass);","import { SIGN_IN_USER, SIGN_OUT_USER, SIGN_UP_USER } from \"./authConstants\";\r\nimport * as api from '../../api/index.js';\r\n\r\nexport function signInUser(user) {\r\n    return {\r\n        type: SIGN_IN_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport function verifyAuth() {\r\n  return function(dispatch) {\r\n   \r\n  }\r\n}\r\n\r\nexport function signOutUser() {\r\n  return {\r\n    type: SIGN_OUT_USER\r\n  }\r\n}\r\n\r\nexport const signup = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signUp(formData);\r\n\r\n    dispatch({ type: SIGN_UP_USER , payload: data });\r\n  }\r\n  \r\n  catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const signin = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signIn(formData);\r\n\r\n    dispatch({ type: SIGN_UP_USER , payload: data });\r\n  } \r\n  \r\n  catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const updatePass = (id, pass) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePassword(id, pass);\r\n\r\n    dispatch({ type: SIGN_UP_USER , payload: data });\r\n  } \r\n  \r\n  catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React from 'react';\r\nimport { Segment, Header, Button, Label, Divider } from 'semantic-ui-react';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updatePass } from './authActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function AccountPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Segment>\r\n\r\n            <Header dividing size='large' content='Account' />\r\n\r\n                <Header color='teal' sub content='Change Password' />\r\n\r\n                <Formik initialValues={{ newPassword1: '', newPassword2: '' }}\r\n                    validationSchema= {Yup.object({\r\n                        newPassword1: Yup.string().required('Password is required'),\r\n                        newPassword2: Yup.string().oneOf([Yup.ref('newPassword1'), null], 'Passwords do not match'),\r\n                        })}\r\n\r\n                    onSubmit= {async (values, {setSubmitting, setErrors}) => {\r\n                        try {\r\n                            const user = JSON.parse(localStorage.getItem('profile'));\r\n                            console.log(user.result._id);\r\n                            console.log(values.newPassword2);\r\n                            dispatch(updatePass(user.result._id, values.newPassword2));\r\n                            setSubmitting(false);\r\n                            history.push('/events');\r\n                        }\r\n                        catch(error) {\r\n                            setErrors({auth: error.message});\r\n                            setSubmitting(false);\r\n                        }\r\n                    }}\r\n                >\r\n                \r\n                {({ errors, isSubmitting, isValid, dirty }) => (\r\n                    <Form className='ui form'>\r\n                        \r\n                        <Field name='newPassword1' type='password' placeholder='New Password'  />\r\n                            <ErrorMessage name='newPassword1' />\r\n                            <Divider hidden />\r\n\r\n                        <Field name='newPassword2' type='password' placeholder='Confirm Password' />\r\n                            <ErrorMessage name='newPassword2' />\r\n                            <Divider hidden />\r\n                    \r\n                        {errors.auth && ( <Label basic color='red' style={{ marginBottom: 10 }} content={errors.auth} /> )}\r\n\r\n                        <Button style={{display: 'block'}} type='submit' disabled={!isValid || isSubmitting || !dirty} \r\n                            loading={isSubmitting} size='large' positive content='Update password' />\r\n\r\n                    </Form>\r\n                )}\r\n\r\n                </Formik>\r\n        </Segment>\r\n    );\r\n}","import React from 'react';\r\nimport { Button, Container, Header, Icon, Image, Segment } from 'semantic-ui-react';\r\n\r\nexport default function HomePage({history}) {\r\n\r\n    //window.location = 'http://localhost:3000/events'\r\n\r\n    return(\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container>\r\n\r\n                <div>\r\n                    <Image src=\"/assets/evento.jpg\" style={{marginLeft: 190}} />\r\n                </div>\r\n\r\n                <Header as='h1' inverted>\r\n                    <Image size=\"massive\" src=\"/assets/logo.png\" style={{marginBottom: 12}} />\r\n                    Xperince\r\n                </Header>\r\n\r\n                <Button onClick={() => history.push('/events')} size='huge' inverted>\r\n                    Get Started\r\n                    <Icon name='right arrow' inverted />\r\n                </Button>\r\n            </Container>\r\n        </Segment>\r\n    )\r\n}\r\n\r\n","\r\n\r\nexport const CREATE_EVENT = 'CREATE_EVENT';\r\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\r\nexport const DELETE_EVENT = 'DELETE_EVENT';\r\nexport const FETCH_EVENTS = 'FETCH_EVENTS';","import { CREATE_EVENT, DELETE_EVENT, FETCH_EVENTS, UPDATE_EVENT } from \"./eventConstants\";\r\n//import { asyncActionStart, asyncActionFinish, asyncActionError } from '../../app/async/asyncReducer';\r\n//import { fetchSampleData } from \"../../app/api/mockApi\";\r\nimport * as api from '../../api/index.js';\r\n\r\n\r\nexport function loadEvents() {\r\n    return async function(dispatch) {\r\n        try {\r\n            const { data } = await api.fetchPosts();\r\n\r\n            data.sort(function(a,b){\r\n                return new Date(a.date) - new Date(b.date);\r\n            });\r\n\r\n            const newDates = data.filter(function(e) {\r\n                return new Date(e.date) >= new Date();\r\n            });\r\n\r\n            //console.log(newDates);\r\n\r\n            const filter = localStorage.getItem(\"eventFilter\");\r\n            //console.log(filter);\r\n\r\n            const user = JSON.parse(localStorage.getItem('profile'));\r\n            //console.log(user?.result.displayName);\r\n\r\n            switch(filter) {\r\n\r\n                case 'isGoing':\r\n                    const newData1 = data.filter(function(e) {\r\n                        return e.attendees.includes(user.result.displayName);\r\n                    });\r\n                    console.log(newData1);\r\n                    dispatch({ type: FETCH_EVENTS, payload: newData1 });\r\n                    break;\r\n\r\n                case 'isHosting':\r\n                    const newData2 = data.filter(function(e) {\r\n                        return e.hostedBy === user.result.displayName;\r\n                    });\r\n                    dispatch({ type: FETCH_EVENTS, payload: newData2 });\r\n                    break;\r\n\r\n                default:\r\n                    dispatch({ type: FETCH_EVENTS, payload: newDates });\r\n            }\r\n            \r\n        }\r\n        catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n}\r\n\r\nexport function createPost(post) {\r\n    return async function(dispatch) {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n        dispatch({ type: CREATE_EVENT, payload: data });\r\n    } \r\n    \r\n    catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updatePost(id, post) {\r\n    return async function(dispatch) {\r\n        \r\n        try {\r\n            console.log(id);\r\n            console.log(post);\r\n            const { data } = await api.updatePost(id, post);\r\n        \r\n            dispatch({ type: UPDATE_EVENT, payload: post });\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function deletePost(id) {\r\n    return async function(dispatch) {\r\n        try {\r\n            await api.deletePost(id);\r\n            dispatch({ type: DELETE_EVENT, payload: id });\r\n            console.log(id);\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function addAttendee(id, post) {\r\n    return async function(dispatch) {\r\n        \r\n        try {\r\n            const { data } = await api.addAttendee(id, post);\r\n            console.log(data);\r\n        \r\n            dispatch({ type: UPDATE_EVENT, payload: data });\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function cancelAttendee(id, post) {\r\n    return async function(dispatch) {\r\n        \r\n        try {\r\n            const { data } = await api.cancelAttendee(id, post);\r\n        \r\n            dispatch({ type: UPDATE_EVENT, payload: data });\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function addComment(id, post) {\r\n    return async function(dispatch) {\r\n        \r\n        try {\r\n            const { data } = await api.addComment(id, post);\r\n            console.log(data);\r\n            dispatch({ type: UPDATE_EVENT, payload: data });\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function toggleEvent(id, post) {\r\n    return async function(dispatch) {\r\n        \r\n        try {\r\n            console.log(post);\r\n            const { data } = await api.toggleEvent(id, post);\r\n            dispatch({ type: UPDATE_EVENT, payload: data });\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function updatePhoto(id, post) {\r\n    return async function(dispatch) {\r\n        \r\n        try {\r\n            console.log(id);\r\n            const { data } = await api.updatePhoto(id, {photoURL: post});\r\n\r\n            dispatch({ type: UPDATE_EVENT, payload: data });\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function updateCount(id, post) {\r\n    return async function(dispatch) {\r\n        \r\n        try {\r\n\r\n            const { data } = await api.updateCount(id, post);\r\n\r\n            dispatch({ type: UPDATE_EVENT, payload: data });\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n///////////////////////////////////////////////\r\nexport function listenToEvents(events) {\r\n    return{\r\n        type: FETCH_EVENTS,\r\n        payload: events\r\n    }\r\n}\r\n\r\nexport function createEvent(event) {\r\n\r\n    return {\r\n\r\n        type: CREATE_EVENT,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport function updateEvent(event) {\r\n\r\n    return {\r\n\r\n        type: UPDATE_EVENT,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport function deleteEvent(eventID) {\r\n\r\n    return {\r\n\r\n        type: DELETE_EVENT,\r\n        payload: eventID\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, List, Loader, Segment } from 'semantic-ui-react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost, updateCount } from '../eventActions';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function EventListItem({event, loading}) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if(loading || !event) return <Loader content='Loading your event...' />\r\n\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const c = JSON.parse(localStorage.getItem('Counter'));\r\n\r\n  console.log(c);\r\n\r\n  if(event?.count && user?.result._id === event?.hostUid && c === null ) {\r\n    toast.error(`${event.count} users commented on your event`);\r\n    localStorage.setItem(\"Counter\", 1);\r\n  }\r\n\r\n  return (\r\n    <Segment.Group>\r\n    <Segment>\r\n      <Item.Group>\r\n        <Item>\r\n          <Item.Image size='tiny' circular src={ event?.hostPhotoURL || 'https://randomuser.me/api/portraits/women/22.jpg'} />\r\n          <Item.Content>\r\n            <Item.Header content={event.title} />\r\n            <Item.Description>\r\n                Hosted by {event.hostedBy}\r\n            </Item.Description>\r\n            {event?.isCancelled && ( \r\n              <Label style={{top: '-40px'}} ribbon='right' color='red' content='This event has been cancelled' />\r\n              )}\r\n          </Item.Content>\r\n        </Item>\r\n      </Item.Group>\r\n    </Segment>\r\n\r\n    <Segment clearing>\r\n      <span>\r\n        <Icon name='clock' /> {event.date}  {/* { ' | ' + event?.time + ' '} */}\r\n        <Icon name='marker' /> {event.venue}\r\n      </span>\r\n    </Segment>\r\n\r\n    <Segment secondary clearing>\r\n      <List horizontal >\r\n        {/*\r\n        {event.attendees.map((attendee) => (\r\n          <EventAttendee key={attendee.id} attendee={attendee} />\r\n        ))}\r\n        */}\r\n      </List>\r\n    </Segment>\r\n\r\n    <Segment clearing>\r\n      <div> {event.description} </div>\r\n      <Button as={Link} to={`/events/${event._id}`} color='teal' floated='right' content='View'/>\r\n    </Segment>\r\n\r\n    \r\n  </Segment.Group>\r\n  )\r\n}","import React from 'react';\r\nimport EventListItem from './EventListItem';\r\n\r\nexport default function EventList({events, loading}) {\r\n  return (\r\n      <> \r\n        { events.map(event => (\r\n          <EventListItem event={event} loading={loading} key={event._id} />\r\n        ))}\r\n      </>\r\n  )\r\n}","import React from 'react';\r\nimport { Menu, Header } from 'semantic-ui-react';\r\nimport { Calendar } from 'react-calendar';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadEvents } from '../eventActions';\r\n\r\nexport default function EventFilters({filterEvent, setfilterEvent, loading}) {\r\n\r\n        const dispatch = useDispatch();\r\n\r\n        function handleAll() {\r\n            setfilterEvent('filter', 'all')\r\n            localStorage.setItem(\"eventFilter\", filterEvent.get('filter'));\r\n            dispatch(loadEvents());\r\n        }\r\n\r\n        function handleisGoing() {\r\n            setfilterEvent('filter', 'isGoing')\r\n            localStorage.setItem(\"eventFilter\", filterEvent.get('filter'));\r\n            dispatch(loadEvents());\r\n        }\r\n\r\n        function handleisHosting() {\r\n            setfilterEvent('filter', 'isHosting')\r\n            localStorage.setItem(\"eventFilter\", filterEvent.get('filter'));\r\n            dispatch(loadEvents());\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Menu vertical size='large' style={{ width: '100%' }}>\r\n\r\n                    <Header icon='filter' attached color='teal' content='Filters' />\r\n\r\n                    <Menu.Item content='All Events'\r\n                        active={filterEvent.get('filter') === 'all'}\r\n                        onClick={handleAll}\r\n                        disabled={loading} />\r\n\r\n                    <Menu.Item content=\"I'm going\"\r\n                        active={filterEvent.get('filter') === 'isGoing'}\r\n                        onClick={handleisGoing}\r\n                        disabled={loading} />\r\n\r\n                    <Menu.Item content=\"I'm hosting\"\r\n                        active={filterEvent.get('filter') === 'isHosting'}\r\n                        onClick={handleisHosting}\r\n                        disabled={loading} />\r\n                    \r\n                </Menu>\r\n\r\n                <Header icon='calendar' attached color='teal' content='Select date' />\r\n                <Calendar \r\n                    onChange={date => setfilterEvent('startDate', date)} \r\n                    value={filterEvent.get('startDate') || new Date()}\r\n                    tileDisable={() => loading} />\r\n            </>\r\n        )\r\n}","import React, { useState } from 'react';\r\nimport { Grid, GridColumn } from 'semantic-ui-react';\r\nimport EventList from './EventList';\r\nimport { useSelector } from 'react-redux';\r\nimport EventFilters from './EventFilters';\r\n\r\nexport default function EventDashboard() {\r\n\r\n    const {events} = useSelector((state) => state.event);\r\n    const {loading} = useSelector((state) => state.async);\r\n\r\n    const [filterEvent, setfilterEvent] = useState(new Map([\r\n        ['startDate', new Date()],\r\n        ['filter', 'all']\r\n    ]));\r\n\r\n    function handlefilterEvent(key, value) {\r\n        setfilterEvent(new Map(filterEvent.set(key, value)))\r\n    }\r\n\r\n    //console.log(events);\r\n   \r\n    return(\r\n        <Grid>\r\n            <GridColumn width={10}>\r\n                <EventList events={events} loading={loading} />\r\n            </GridColumn>\r\n\r\n            <GridColumn width={6}>\r\n                <EventFilters filterEvent={filterEvent} setfilterEvent={handlefilterEvent} loading={loading} />\r\n            </GridColumn>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { toast } from 'react-toastify';\r\nimport { Button, FormField } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addComment } from '../eventActions';\r\n\r\nexport default function EventDetailedChatForm({ eventId }) {\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const chat = [{ displayName:'', description:'', date: new Date() }];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Formik\r\n        initialValues={{ comment:'' }}\r\n\r\n        validationSchema={Yup.object({\r\n            comment: Yup.string().required()\r\n        })}\r\n\r\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n            try {\r\n            chat[0].displayName = user.result.displayName;\r\n            chat[0].description = values.comment;\r\n            console.log(chat);\r\n            dispatch(addComment(eventId, chat));\r\n            resetForm();\r\n            } \r\n            catch (error) {\r\n            toast.error(error.message);\r\n            } \r\n            finally {\r\n            setSubmitting(false);\r\n            }\r\n        }}\r\n        >\r\n        {({ isSubmitting }) => (\r\n\r\n            <Form className='ui form'>\r\n                <FormField>\r\n                    <Field name='comment' placeholder='Please enter your comment here' />\r\n                    <ErrorMessage name='comment' />\r\n                </FormField>\r\n                <Button loading={isSubmitting} icon='edit' primary type='submit' content='Add reply' />\r\n            </Form>\r\n        )}\r\n        </Formik>\r\n    );\r\n}","import React from 'react';\r\nimport {Segment, Header, Comment } from 'semantic-ui-react';\r\nimport EventDetailedChatForm from './EventDetailedChatForm';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function EventDetailedChat({event}) {\r\n\r\n    //format(comment?.date, new Date())\r\n    //console.log(format(new Date(event.date), 'MMMM d, yyyy h:mm a'));\r\n    \r\n    return(\r\n        <>\r\n            <Segment\r\n                textAlign=\"center\"\r\n                attached=\"top\"\r\n                inverted\r\n                color=\"teal\"\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n\r\n            <Segment attached>\r\n                <Comment.Group>\r\n                    {event.comments.map(comment => (\r\n                        <Comment key={comment?._id} >\r\n                            <Comment.Avatar src=\"/assets/user.png\"/>\r\n                            <Comment.Content>\r\n                                <Comment.Author as=\"a\">{comment?.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{comment?.date}</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text>{comment?.description}</Comment.Text>\r\n                                <Comment.Actions>\r\n                                    <Comment.Action>Reply</Comment.Action>\r\n                                </Comment.Actions>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n                </Comment.Group>\r\n\r\n                <EventDetailedChatForm eventId={event._id} />\r\n            </Segment>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport {Segment, Header, Image, Item, Button} from 'semantic-ui-react';\r\nimport { addAttendee, cancelAttendee } from '../eventActions';\r\n\r\nconst eventImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst eventImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\nexport default function EventDetailedHeader({event, isHost, isGoing}) {\r\n\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    async function joinEvent() {\r\n        setLoad(true);\r\n        try {\r\n            const aj = Array.from([]);\r\n            aj.push(user.result.displayName);\r\n            dispatch(addAttendee(event._id, aj));\r\n            //await addAttendee(event);\r\n            setLoad(false);\r\n        }\r\n        catch(error) {\r\n            toast.error(error.message);\r\n            setLoad(false);\r\n        }\r\n    }\r\n\r\n    async function cancelEvent() {\r\n        setLoad(true);\r\n        try {\r\n            const bj = Array.from([]);\r\n            bj.push(user.result.displayName);\r\n            dispatch(cancelAttendee(event._id, bj));\r\n            //await cancelAttendee(event);\r\n            setLoad(false);\r\n        }\r\n        catch(error) {\r\n            toast.error(error.message);\r\n            setLoad(false);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Segment.Group>\r\n            <Segment basic attached=\"top\" style={{padding: '0'}}>\r\n                <Image src={`/assets/categoryImages/${event.category}.jpg`} fluid style={eventImageStyle} />\r\n\r\n                <Segment style={eventImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size=\"huge\"\r\n                                    content={event.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{event.date}</p>\r\n                                <p>\r\n                                    Hosted by <strong> {event.hostedBy} </strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n\r\n            <Segment attached=\"bottom\" clearing>\r\n\r\n                { event.isCancelled && (<Button color='red' content='Event Cancelled'/>)}\r\n\r\n                { !isHost && !event.isCancelled && (\r\n                <>\r\n                { isGoing ? (<Button onClick={cancelEvent} loading={load}>Cancel My Place</Button>) : \r\n                    (<Button onClick={joinEvent} loading={load} color=\"teal\">JOIN THIS EVENT</Button>) }\r\n                </>)}\r\n\r\n                { isHost && (<Button as={Link} to={`/manage/${event._id}`} color=\"orange\" floated=\"right\"> Manage Event </Button>)}\r\n\r\n            </Segment>\r\n        </Segment.Group>\r\n    );\r\n}","import React from 'react';\r\nimport {Segment, Grid, Icon, Button} from 'semantic-ui-react';\r\n\r\nexport default function EventDetailedInfo({event}) {\r\n\r\n    return(\r\n        <Segment.Group>\r\n            <Segment attached=\"top\">\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size=\"large\" color=\"teal\" name=\"info\"/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{event.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign=\"middle\">\r\n                    <Grid.Column width={1}>\r\n                        <Icon name=\"calendar\" size=\"large\" color=\"teal\"/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <span> {event.date} </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign=\"middle\">\r\n                    <Grid.Column width={1}>\r\n                        <Icon name=\"marker\" size=\"large\" color=\"teal\"/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span> {event.venue} </span>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={4}>\r\n                        <Button color=\"teal\" size=\"tiny\" content=\"Show Map\"/>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    );\r\n}","import React from 'react';\r\nimport {Segment, Item} from 'semantic-ui-react';\r\n\r\nexport default function EventDetailedSidebar({event}) {\r\n\r\n    return(\r\n        <>\r\n            <Segment\r\n                textAlign=\"center\"\r\n                style={{border: 'none'}}\r\n                attached=\"top\"\r\n                secondary\r\n                inverted\r\n                color=\"teal\"\r\n            >\r\n                {event?.attendees.length} {event?.attendees.length > 1 ? 'People' : 'Person'} Going\r\n            </Segment>\r\n\r\n            <Segment attached>\r\n                <Item.Group relaxed divided>\r\n\r\n                    {event?.attendees.map(attendee => (\r\n\r\n                        <Item key={attendee.id} style={{position: 'relative'}}>\r\n                        <Item.Image size=\"tiny\" src={attendee.photoURL || '/assets/user.png'} />\r\n                        <Item.Content verticalAlign=\"middle\">\r\n                            <Item.Header as=\"h3\">\r\n                                <span> {attendee} </span>\r\n                            </Item.Header>\r\n                        </Item.Content>\r\n                        </Item>\r\n\r\n                    ))}\r\n                    \r\n\r\n                </Item.Group>\r\n            </Segment>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport EventDetailedChat from './EventDetailedChat';\r\nimport EventDetailedHeader from './EventDetailedHeader';\r\nimport EventDetailedInfo from './EventDetailedInfo';\r\nimport EventDetailedSidebar from './EventDetailedSidebar';\r\n\r\nexport default function EventDetailedPage({match}) {\r\n\r\n    const event = useSelector(state => state.event.events.find(e => e._id === match.params.id));\r\n\r\n    const { loading, error } = useSelector((state) => state.async);\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const isHost = event?.hostUid === user?.result._id;\r\n\r\n    const isGoing = event?.attendees?.some((a) => a === user?.result.displayName);\r\n    //console.log(event.attendees);\r\n\r\n \r\n    if(loading || !event) return <Loader content='Loading your event...' /> \r\n\r\n    if (error) return <Loader content='Cannot find the document!' /> \r\n\r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <EventDetailedHeader event={event} isHost={isHost} isGoing={isGoing} />\r\n                <EventDetailedInfo event={event} />\r\n                <EventDetailedChat event={event} />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={6}>\r\n                <EventDetailedSidebar event={event} />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { Field, Formik, Form, ErrorMessage } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Confirm, FormField, Header, Loader, Segment} from 'semantic-ui-react';\r\nimport { createPost, toggleEvent, updatePost } from '../eventActions';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport * as api from '../../../api/index.js';\r\n\r\nexport default function EventForm({match, history}) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [confirmOpen, setConfirmOpen] = useState(false);\r\n\r\n    const selectedEvent = useSelector(state => state.event.events.find(e => e._id === match.params.id));\r\n    //console.log(selectedEvent?.title);\r\n\r\n    const { loading, error } = useSelector((state) => state.async);\r\n\r\n    var eSelect = null;\r\n\r\n    async function handle() {\r\n        const { data } = await api.fetchPosts();\r\n        data.forEach(p => {\r\n            if(p.title === selectedEvent?.title) {\r\n                //console.log(p._id);\r\n                eSelect = p._id;\r\n            }\r\n           });\r\n    }\r\n    handle();\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    const initialValues = selectedEvent ?? {\r\n\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        city: '',\r\n        venue: '',\r\n        date: '',\r\n        time: '',\r\n        hostUid: user.result._id,\r\n        hostedBy: user.result.displayName,\r\n        hostPhotoURL: user?.result?.photoURL || '/assets/user.png',\r\n        isCancelled: false\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required(),\r\n        category: Yup.string().required(),\r\n        description: Yup.string().required(),\r\n        city: Yup.string().required(),\r\n        venue: Yup.string().required(),\r\n        date: Yup.string().required()\r\n\r\n    })\r\n\r\n    async function handleCancelEvent(event) {\r\n        setConfirmOpen(false);\r\n        try {\r\n          dispatch(toggleEvent(event._id, !event.isCancelled));\r\n        } \r\n        catch (error) {\r\n          toast.error(error.message);\r\n        }\r\n      }\r\n\r\n    \r\n\r\n    return(\r\n        <Segment clearing>\r\n            <Header content={selectedEvent ? 'Edit my event' : 'Create new event'} />\r\n\r\n                <Formik initialValues={initialValues} \r\n                    validationSchema={validationSchema} \r\n                    onSubmit={ async (values, { setSubmitting }) => {\r\n\r\n                        try {\r\n                            console.log(values);\r\n                            selectedEvent ? dispatch(updatePost(eSelect, values)) : dispatch(createPost(values));\r\n                            setSubmitting(false);\r\n                            history.push('/events');\r\n                            document.location.reload();\r\n                        }\r\n\r\n                        catch(error) {\r\n                            toast.error(error.message);\r\n                            setSubmitting(false);\r\n                        }\r\n                }} >\r\n\r\n                    {({ isSubmitting, dirty, isValid }) => (\r\n\r\n                        <Form className='ui form' >\r\n                        <FormField>\r\n                            <Field name='title' placeholder='Event title' />\r\n                            <ErrorMessage name='title' />\r\n                        </FormField>\r\n\r\n                        <FormField>\r\n                            <Field name='category' placeholder='Category' as='select'>\r\n                                <option value=\"None\">None</option>\r\n                                <option value=\"travel\">Travel</option>\r\n                                <option value=\"drinks\">Drinks</option>\r\n                                <option value=\"food\">Food</option>\r\n                                <option value=\"music\">Music</option>\r\n                                <option value=\"culture\">Culture</option>\r\n                                <option value=\"film\">Film</option>\r\n                            </Field>\r\n                            <ErrorMessage name='category' />\r\n                        </FormField>\r\n\r\n                        <FormField>\r\n                            <Field name='description' placeholder='Description' as='textarea' />\r\n                            <ErrorMessage name='description' />\r\n                        </FormField>\r\n\r\n                        <FormField>\r\n                            <Field name='city' placeholder='City' option />\r\n                            <ErrorMessage name='city' />\r\n                        </FormField>\r\n\r\n                        <FormField>\r\n                            <Field name='venue' placeholder='Venue' />\r\n                            <ErrorMessage name='venue' />\r\n                        </FormField>\r\n\r\n                        <FormField>\r\n                            <Field name='date' placeholder='Event Date' type='date' />\r\n                            <ErrorMessage name='date' />\r\n                        </FormField>\r\n\r\n                        <FormField>\r\n                            <Field name='time' placeholder='Event Time' type='time' />\r\n                        </FormField>\r\n\r\n                        <Button \r\n                        loading={isSubmitting} \r\n                        disabled={!isValid || !dirty || isSubmitting} \r\n                        type='submit' floated='right' positive content='Submit' />\r\n\r\n                        <Button disabled={isSubmitting} as={Link} to='/' type='submit' floated='right' content='Cancel' />\r\n\r\n                        {selectedEvent && ( <Button type='button' floated='left'\r\n                                color= {selectedEvent.isCancelled ? 'green' : 'red'}\r\n                                content= {selectedEvent.isCancelled ? 'Reactivate event': 'Cancel Event'}\r\n                                onClick= { () => setConfirmOpen(true) } />\r\n                            )}\r\n\r\n                        </Form>\r\n                    )}\r\n                    \r\n                </Formik>\r\n\r\n                <Confirm content= { selectedEvent?.isCancelled ? 'Do you want to reactivate the event?' : \r\n                    'This will cancel the event - are you sure?' }\r\n                    open={confirmOpen}\r\n                    onCancel={() => setConfirmOpen(false)}\r\n                    onConfirm={() => handleCancelEvent(selectedEvent)} />\r\n        </Segment>\r\n    \r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport { SIGN_OUT_USER } from '../authentication/authConstants';\r\n\r\nexport default function SignedInMenu() {\r\n\r\n    const {currentUserProfile} = useSelector((state) => state.profile);\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    const photo = localStorage.getItem(\"userPhoto\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    async function handleSignOut() {\r\n        try{\r\n            dispatch({ type: SIGN_OUT_USER});\r\n            history.push('/');\r\n            setUser(null);\r\n        }\r\n        catch(error){\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Menu.Item position='right'>\r\n            <Image avatar spaced='right' src={ photo || user?.result?.photoURL || '/assets/user.png'} />\r\n            <Dropdown pointing='top left' text={user?.result?.displayName || user?.result?.name} >\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item as={Link} to='/createEvent' text='Create Event' icon='plus' />\r\n                    <Dropdown.Item as={Link} to={`/profile/${user?.result._id || user?.result?.googleId}`} text='My Profile' icon='user' />\r\n                    <Dropdown.Item as={Link} to='/account' text='My Account' icon='settings' />\r\n                    <Dropdown.Item \r\n                    onClick={handleSignOut}\r\n                    text='Sign Out' icon='power' />\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Menu.Item>\r\n    );\r\n}","const OPEN_MODAL = 'OPEN_MODAL';\r\nconst CLOSE_MODAL = 'CLOSE_MODAL';\r\n\r\nexport function openModal(payload) {\r\n  return {\r\n    type: OPEN_MODAL,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function closeModal() {\r\n  return {\r\n    type: CLOSE_MODAL,\r\n  };\r\n}\r\n\r\nconst initialState = null;\r\n\r\nexport default function modalReducer(state = initialState, { type, payload }) {\r\n\r\n  switch (type) {\r\n\r\n    case OPEN_MODAL:\r\n      const { modalType, modalProps } = payload;\r\n      return { modalType, modalProps };\r\n\r\n    case CLOSE_MODAL:\r\n      return null;\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Menu } from 'semantic-ui-react';\r\nimport { openModal } from '../../app/common/modals/modalReducer';\r\n\r\nexport default function SignedOutMenu({setAuthenticate}) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return(\r\n        <Menu.Item position='right'>\r\n            <Button onClick={() => dispatch(openModal({modalType: 'LoginForm'}))} basic inverted content= 'Login' />\r\n            <Button onClick={() => dispatch(openModal({modalType: 'RegisterForm'}))} basic inverted content= 'Register' \r\n                style={{marginLeft: '0.5em' }} />\r\n        </Menu.Item>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu } from 'semantic-ui-react';\r\nimport SignedInMenu from './SignedInMenu';\r\nimport SignedOutMenu from './SignedOutMenu';\r\n\r\nexport default function NavBar({setFormOpen}) {\r\n\r\n    const {authenticated} = useSelector((state) => state.auth);\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const x = 2;\r\n\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} exact to='/' header>\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: 15}}/>\r\n                    Xperince\r\n                </Menu.Item>\r\n\r\n                <Menu.Item as={NavLink} to='/events' name='Events'/>\r\n\r\n                {(authenticated || user) && \r\n                <Menu.Item as={NavLink} to='/createEvent' >\r\n                    <Button positive inverted content= 'Create Event' />\r\n                </Menu.Item> }\r\n\r\n                {(authenticated || user) ? <SignedInMenu /> : <SignedOutMenu />}\r\n            </Container>\r\n\r\n        </Menu>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { closeModal } from './modalReducer';\r\n\r\nexport default function ModalWrapper({children, size, header}) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Modal open={true} onClose={() => dispatch(closeModal())} size={size}>\r\n            {header && <Modal.Header>{header}</Modal.Header>}\r\n            <Modal.Content>\r\n                {children}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}","import React from 'react';\r\nimport ModalWrapper from '../../app/common/modals/ModalWrapper';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Divider, Label } from 'semantic-ui-react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeModal } from '../../app/common/modals/modalReducer';\r\nimport { signin } from './authActions';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { SIGN_UP_USER } from './authConstants';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function LoginForm() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        try {\r\n        dispatch({ type: SIGN_UP_USER, payload: { result, token } });\r\n        dispatch(closeModal());\r\n        history.push('/events');\r\n        }\r\n\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    const googleError = () => alert('Google Sign In was unsuccessful');\r\n\r\n    return (\r\n        <ModalWrapper size='mini' header='Sign in to Xperince'>\r\n            <Formik\r\n                initialValues={{email: '', password: ''}}\r\n                validationSchema = { Yup.object({\r\n                    email: Yup.string().required().email(),\r\n                    password: Yup.string().required()\r\n                })}\r\n\r\n                onSubmit={ async (values, {setSubmitting, setErrors}) => {\r\n\r\n                    try {\r\n                        dispatch(signin(values));\r\n                        //await signInWithEmail(values);\r\n                        setSubmitting(false);\r\n                        dispatch(closeModal());\r\n                    }\r\n                    catch(error){\r\n                        setErrors({auth: 'username or password does not exist!'});\r\n                        setSubmitting(false);\r\n                    }\r\n                }}\r\n            >\r\n                {({isSubmitting, isValid, dirty, errors}) => (\r\n\r\n                    <Form className='ui form'>\r\n\r\n                        <Field name='email' placeholder='Email Address' />\r\n                            <ErrorMessage name=\"email\"> \r\n                                { msg => <Label basic color='red' style={{marginTop: 1}} >{msg}</Label> }\r\n                            </ErrorMessage>\r\n                            <Divider hidden />\r\n\r\n                        <Field name='password' placeholder='Password' type='password' />\r\n                            <ErrorMessage name=\"password\"> \r\n                                { msg => <Label basic color='red' style={{marginTop: 1}} >{msg}</Label> }\r\n                            </ErrorMessage>\r\n                            <Divider hidden />\r\n                        \r\n                        {errors.auth && <Label basic color='red' style={{marginBottom: 10}} content={errors.auth} />}\r\n\r\n                        <Button \r\n                            loading={isSubmitting}\r\n                            disabled={!isValid || !dirty || isSubmitting}\r\n                            type='submit'\r\n                            fluid\r\n                            size='large'\r\n                            color='teal'\r\n                            content='Login'\r\n                        />\r\n\r\n                        <Divider horizontal>Or</Divider>\r\n\r\n                        <GoogleLogin\r\n                            clientId=\"92980069783-5l339n1i0e1t6ecrjvinbl0uoh8quts2.apps.googleusercontent.com\"\r\n                            render={(renderProps) => (\r\n                            <Button onClick={renderProps.onClick} icon='google' \r\n                                fluid color='google plus' content='Login with Google' />\r\n                            )}\r\n                            onSuccess={googleSuccess}\r\n                            onFailure={googleError}\r\n                            cookiePolicy=\"single_host_origin\"\r\n                        />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </ModalWrapper>\r\n    )\r\n}","import React from 'react';\r\nimport ModalWrapper from '../../app/common/modals/ModalWrapper';\r\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Divider, Label } from 'semantic-ui-react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeModal } from '../../app/common/modals/modalReducer';\r\nimport { signup } from './authActions';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { SIGN_UP_USER } from './authConstants';\r\n\r\nexport default function RegisterForm({history}) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        try {\r\n        dispatch({ type: SIGN_UP_USER, payload: { result, token } });\r\n        dispatch(closeModal());\r\n        history.push('/events');\r\n        }\r\n\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    const googleError = () => alert('Google Sign In was unsuccessful');\r\n\r\n    return (\r\n        <ModalWrapper size='mini' header='Register to Xperience'>\r\n            <Formik\r\n                initialValues={{displayName: '', email: '', password: '', photoURL: '',}}\r\n\r\n                validationSchema= { Yup.object({\r\n                    displayName: Yup.string().required(), \r\n                    email: Yup.string().required().email(),\r\n                    password: Yup.string().required().matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                    \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\")\r\n                })}\r\n\r\n                onSubmit={ async (values, {setSubmitting, setErrors}) => {\r\n\r\n                    try {\r\n                        dispatch(signup(values));\r\n                        setSubmitting(false);\r\n                        dispatch(closeModal());\r\n                    }\r\n                    catch(error) {\r\n                        setErrors({auth: error.message});\r\n                        setSubmitting(false);\r\n                    }\r\n                }}\r\n            >\r\n                {({isSubmitting, isValid, dirty, errors}) => (\r\n\r\n                    <Form className='ui form'>\r\n\r\n                        <Field name='displayName' placeholder='Your Name' />\r\n                            <ErrorMessage name='displayName' />\r\n                            <Divider hidden />\r\n\r\n                        <Field name='email' placeholder='Email Address' />\r\n                            <ErrorMessage name='email' />\r\n                            <Divider hidden />\r\n\r\n                        <Field name='password' placeholder='Password' type='password' />\r\n                            <ErrorMessage name='password' />\r\n                            <Divider hidden />\r\n                        \r\n                        {errors.auth && <Label basic color='red' style={{marginBottom: 10}} content={errors.auth} />}\r\n\r\n                        <Button \r\n                            loading={isSubmitting}\r\n                            disabled={!isValid || !dirty || isSubmitting}\r\n                            type='submit'\r\n                            fluid\r\n                            size='large'\r\n                            color='teal'\r\n                            content='Register'\r\n                        />\r\n\r\n                        <Divider horizontal>Or</Divider>\r\n\r\n                        <GoogleLogin\r\n                            clientId=\"92980069783-5l339n1i0e1t6ecrjvinbl0uoh8quts2.apps.googleusercontent.com\"\r\n                            render={(renderProps) => (\r\n                            <Button onClick={renderProps.onClick} icon='google' \r\n                                fluid color='google plus' content='SignUp with Google' />\r\n                            )}\r\n                            onSuccess={googleSuccess}\r\n                            onFailure={googleError}\r\n                            cookiePolicy=\"single_host_origin\"\r\n                        />\r\n                    </Form>\r\n                    )}\r\n            </Formik>\r\n        </ModalWrapper>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport LoginForm from '../../../features/authentication/LoginForm';\r\nimport RegisterForm from '../../../features/authentication/RegisterForm';\r\n\r\nexport default function ModalManager() {\r\n\r\n    const modalLookup = {  LoginForm, RegisterForm };\r\n\r\n    const currentModal = useSelector((state) => state.modals);\r\n\r\n    let renderedModal;\r\n\r\n    if (currentModal) {\r\n      const { modalType, modalProps } = currentModal;\r\n      const ModalComponent = modalLookup[modalType];\r\n      renderedModal = <ModalComponent {...modalProps} />;\r\n    }\r\n  \r\n    return <span> { renderedModal } </span>;\r\n}","export const LISTEN_TO_CURRENT_USER_PROFILE = 'LISTEN_TO_CURRENT_USER_PROFILE';\r\nexport const UPDATE_PHOTO = 'UPDATE_PHOTO';","import { LISTEN_TO_CURRENT_USER_PROFILE, UPDATE_PHOTO } from './profleConstants';\r\nimport * as api from '../../api/index.js';\r\n\r\nexport function listenToCurrentUserProfile(profile) {\r\n    return {\r\n        type: LISTEN_TO_CURRENT_USER_PROFILE,\r\n        payload: profile\r\n    }   \r\n}\r\n\r\n\r\nexport function addPhoto(id, user) {\r\n    return async function(dispatch) {\r\n        \r\n        try {\r\n            const { data } = await api.addPhoto(id, {photoURL: user});\r\n            console.log(data);\r\n            dispatch({ type: UPDATE_PHOTO, payload: data });\r\n        } \r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Segment, Grid, Item, Header, Loader, Button, Statistic, Reveal, Divider } from 'semantic-ui-react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listenToCurrentUserProfile } from './profileActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ProfilePage({match}) {\r\n\r\n    //const { currentUserProfile } = useSelector((state) => state.profile);\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const { loading, error } = useSelector((state) => state.async);\r\n\r\n    const photo = localStorage.getItem(\"userPhoto\");\r\n\r\n    //if ((loading && !currentUserProfile) || (!currentUserProfile && !error)) return <Loader content='Loading profile...' />;\r\n\r\n    return(\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                <Item.Group>\r\n                    <Item>\r\n                    <Item.Image\r\n                        avatar\r\n                        size='small'\r\n                        src={ photo || user?.result?.photoURL || '/assets/user.png' }\r\n                    />\r\n                    <Item.Content verticalAlign='middle'>\r\n                        <Header\r\n                        as='h1'\r\n                        style={{ display: 'block', marginBottom: 10 }}\r\n                        content={user.result?.displayName}\r\n                        />\r\n                    </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n                    <Button as={Link} to={`/profile/photo/${user.result._id}`} content='Upload Photo' \r\n                        basic color='red' icon='user' />\r\n                </Grid.Column>\r\n\r\n                \r\n                <Grid.Column width={4}>\r\n\r\n                    <Divider hidden />\r\n                    <Statistic.Group>\r\n                        <Statistic label='Followers' value={10} />\r\n                        <Statistic label='Following' value={5} />\r\n                    </Statistic.Group>\r\n\r\n                    <Divider />\r\n\r\n                    <Reveal animated='move'>\r\n\r\n                        <Reveal.Content visible style={{ width: '100%' }}>\r\n                            <Button fluid color='teal' content='Following' />\r\n                        </Reveal.Content>\r\n\r\n                        <Reveal.Content hidden style={{ width: '100%' }}>\r\n                            <Button fluid color='red' content='Unfollow' />\r\n                        </Reveal.Content>\r\n                    </Reveal>\r\n                </Grid.Column>\r\n                \r\n\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n}","import React, { useRef } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nexport default function PhotoWidgetCropper({setImage, imagePreview}) {\r\n\r\n    const cropper = useRef(null);\r\n\r\n    //cropper.current.cropper.getCroppedCanvas();\r\n\r\n    function cropImage() {\r\n        if (typeof cropper.current.cropper.getCroppedCanvas() === 'undefined') {\r\n            return;\r\n        }\r\n        cropper.current.cropper.getCroppedCanvas().toBlob(blob => {\r\n            setImage(blob);\r\n        }, 'image/jpeg');\r\n    }\r\n\r\n    return (\r\n      <Cropper\r\n        ref={cropper}\r\n        src={imagePreview}\r\n        style={{height: 200, width: '100%'}}\r\n        // Cropper.js options\r\n        aspectRatio={1}\r\n        preview='.img-preview'\r\n        guides={false}\r\n        viewMode={1}\r\n        dragMode='move'\r\n        scalable={true}\r\n        cropBoxMovable={true}\r\n        cropBoxResizable={true}\r\n        crop={cropImage} />\r\n    )\r\n}","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}) {\r\n\r\n    const dropzoneStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderRadius: '5%',\r\n        paddingTop: '30px',\r\n        textAlign: 'center'\r\n    }\r\n   \r\n    const dropzoneActive = {\r\n        border: 'dashed 3px green'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })))\r\n    }, [setFiles])\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n    return (\r\n        <div {...getRootProps()} style={isDragActive ? {...dropzoneStyles, ...dropzoneActive} : dropzoneStyles} >\r\n        <input {...getInputProps()} />\r\n        <Icon name='upload' size='huge' />\r\n        <Header content='Drop image here' />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Divider, Grid, Header, Item } from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPhoto } from '../../../features/profile/profileActions';\r\nimport { updatePhoto } from '../../../features/events/eventActions';\r\n\r\nexport default function PhotoUploadWidget({userID}) {\r\n\r\n    const [files, setFiles] = useState([]);\r\n    const [image, setImage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [base64data, setBase] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    async function handleUploadImage() {\r\n        setLoading(true);\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(image); \r\n            reader.onloadend = function() { \r\n                setBase(reader.result);\r\n                console.log(userID);\r\n                console.log(reader.result);\r\n                localStorage.setItem(\"userPhoto\", reader.result);\r\n                dispatch(addPhoto(userID, reader.result));\r\n                dispatch(updatePhoto(userID, reader.result));\r\n            }\r\n            setLoading(false);\r\n            handleCancelCrop();\r\n            document.location.reload();\r\n        }\r\n        catch(error) {\r\n            toast.error(error.message);\r\n            setLoading(false);\r\n        }\r\n        \r\n    }\r\n    \r\n    function handleCancelCrop() {\r\n        setFiles([]);\r\n        setImage(null);\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n            <Item.Image avatar size='small' src={ base64data || '/assets/user.png' } />\r\n                <Header color='teal' sub content='Step 1 - Add Photo' />\r\n                <PhotoWidgetDropzone setFiles={setFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' sub content='Step 2 - Resize' />\r\n                    { files.length > 0 && ( <PhotoWidgetCropper setImage={setImage} imagePreview={files[0].preview} /> )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' sub content='Step 3 - Preview & upload' />\r\n                { files.length > 0 && \r\n                    <>\r\n                        <div className='img-preview' style={{ minHeight: 200, minWidth: 200, overflow: 'hidden' }} />\r\n                        <Divider />\r\n                        <Button.Group>\r\n                            <Button loading={loading} onClick={handleUploadImage} style={{ width: 100 }} positive icon='check' />\r\n                            <Button disabled={loading} onClick={handleCancelCrop} style={{ width: 100 }} icon='close' />\r\n                        </Button.Group>\r\n                    </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import React from 'react';\r\nimport { Grid, Header, Tab } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/photos/PhotoUploadWidget';\r\n\r\n\r\nexport default function PhotosTab({match}) {\r\n\r\n    return (\r\n        <Tab.Pane>\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                <Header floated='left' icon='user' content={`Photo`} />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={16}>\r\n                <PhotoUploadWidget userID={match.params.id} />\r\n            </Grid.Column>\r\n        </Grid>\r\n        </Tab.Pane>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { Route, useLocation } from 'react-router';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Container } from 'semantic-ui-react';\r\nimport AccountPage from '../../features/authentication/AccountPage';\r\nimport HomePage from '../../features/home/HomePage';\r\n\r\nimport EventDashboard from '../../features/events/eventDashboard/EventDashboard';\r\nimport EventDetailedPage from '../../features/events/eventDetails/EventDetailedPage';\r\nimport EventForm from '../../features/events/EventForm/EventForm';\r\nimport NavBar from '../../features/nav/NavBar';\r\nimport ModalManager from '../common/modals/ModalManager';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadEvents } from '../../features/events/eventActions';\r\nimport ProfilePage from '../../features/profile/ProfilePage';\r\nimport PhotosTab from '../../features/profile/PhotoTab';\r\n\r\nfunction App() {\r\n\r\n  const {key} = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadEvents());\r\n  }, [dispatch]);\r\n  \r\n  return (\r\n    <>\r\n      <ModalManager/>\r\n      <ToastContainer position='bottom-right' hideProgressBar />\r\n      <Route exact path='/' component={HomePage} />\r\n\r\n      <Route path={'/(.+)'} render={() => (\r\n        <>\r\n          <NavBar />\r\n          <Container className='main'>\r\n            <Route exact path='/events' component={EventDashboard} />\r\n            <Route path='/events/:id' component={EventDetailedPage} />\r\n            <Route path={['/createEvent', '/manage/:id']} component={EventForm} key={key} />\r\n            <Route path='/account' component={AccountPage} />\r\n            <Route path='/profile/:id' component={ProfilePage} />\r\n            <Route path='/profile/photo/:id' component={PhotosTab} />\r\n\r\n          </Container>\r\n        \r\n        </>\r\n      )} />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { SIGN_IN_USER, SIGN_OUT_USER, SIGN_UP_USER } from \"./authConstants\";\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    currentUser: null,\r\n  };\r\n\r\n\r\nexport default function authReducer(state = initialState, { type, payload }) {\r\n    switch (type) {\r\n\r\n        case SIGN_IN_USER:\r\n            return {\r\n            ...state,\r\n            authenticated: true,\r\n            currentUser: {\r\n                email: payload.email,\r\n                photoURL: 'assets/user.png',\r\n                uid: payload.uid,\r\n                displayName: payload.displayName,\r\n                providerId: payload.providerData[0].providerId\r\n                }\r\n            };\r\n\r\n        case SIGN_OUT_USER:\r\n            localStorage.clear();\r\n            console.log('Signed Out Successfully!');\r\n            return {\r\n            ...state,\r\n            authenticated: false,\r\n            currentUser: null,\r\n            };\r\n\r\n        case SIGN_UP_USER:\r\n            console.log(payload);\r\n            localStorage.setItem('profile', JSON.stringify({ ...payload }));\r\n            return { ...state, authenticated: true, currentUser: payload };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n  }","import { CREATE_EVENT, DELETE_EVENT, FETCH_EVENTS, UPDATE_EVENT } from './eventConstants';\r\n\r\nconst initialState = {\r\n    events: []\r\n}\r\n\r\nexport default function eventReducer(state = initialState, {type, payload}) {\r\n\r\n    switch(type) {\r\n\r\n        case CREATE_EVENT:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, payload]\r\n            }\r\n\r\n        case UPDATE_EVENT:\r\n            return {\r\n                ...state,\r\n                events: [...state.events.filter(evt => evt._id !== payload._id), payload]\r\n            }\r\n\r\n        case DELETE_EVENT:\r\n            return {\r\n            ...state,\r\n            events: [...state.events.filter(evt => evt._id !== payload)]\r\n        }\r\n\r\n        case FETCH_EVENTS:\r\n            return {\r\n                ...state,\r\n                events: payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { LISTEN_TO_CURRENT_USER_PROFILE, UPDATE_PHOTO } from './profleConstants';\r\n\r\nconst initialState = { \r\n    currentUserProfile: null\r\n}\r\n\r\nexport default function profileReducer( state = initialState, { type, payload }) {\r\n    switch (type) {\r\n\r\n        case LISTEN_TO_CURRENT_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                currentUserProfile: payload\r\n            }\r\n\r\n        case UPDATE_PHOTO:\r\n            return {\r\n                ...state,\r\n                currentUserProfile: payload\r\n            }\r\n        \r\n        default: {\r\n            return state;\r\n      }\r\n    }\r\n}","const ASYNC_ACTION_START = 'ASYNC_ACTION_START';\r\nconst ASYNC_ACTION_FINISH = 'ASYNC_ACTION_FINISH';\r\nconst ASYNC_ACTION_ERROR = 'ASYNC_ACTION_ERROR';\r\n\r\n\r\nexport function asyncActionStart() {\r\n  return {\r\n    type: ASYNC_ACTION_START,\r\n  };\r\n}\r\n\r\nexport function asyncActionFinish() {\r\n  return {\r\n    type: ASYNC_ACTION_FINISH,\r\n  };\r\n}\r\n\r\nexport function asyncActionError(error) {\r\n  console.log(error);\r\n  return {\r\n    type: ASYNC_ACTION_ERROR,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default function asyncReducer(state = initialState, { type, payload }) {\r\n\r\n    switch (type) {\r\n        case ASYNC_ACTION_START:\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n        };\r\n\r\n        case ASYNC_ACTION_FINISH:\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n        };\r\n\r\n        case ASYNC_ACTION_ERROR:\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            error: payload,\r\n        };\r\n\r\n        default:\r\n        return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from '../../features/authentication/authReducer';\r\nimport eventReducer from '../../features/events/eventReducer';\r\nimport profileReducer from '../../features/profile/profileReducer';\r\nimport asyncReducer from '../async/asyncReducer';\r\nimport modalReducer from '../common/modals/modalReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n    event: eventReducer,\r\n    modals: modalReducer,\r\n    auth: authReducer,\r\n    async: asyncReducer,\r\n    profile: profileReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './app/Store/configureStore';\r\n\r\nconst store = configureStore();\r\n\r\n//store.dispatch(loadEvents());\r\n\r\nconst rootEL = document.getElementById('root');\r\n\r\nfunction render() {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n    , rootEL\r\n    )}\r\n\r\nif (module.hot) {\r\n\r\n  module.hot.accept('./app/layout/App', function() {\r\n    setTimeout(render);\r\n  })\r\n}\r\n\r\nrender();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk';\r\nimport { verifyAuth } from '../../features/authentication/authActions';\r\n\r\nexport function configureStore() {\r\n    \r\n    const store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n    //store.dispatch(verifyAuth())\r\n\r\n    return store\r\n}"],"sourceRoot":""}